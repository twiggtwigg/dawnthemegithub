{%- unless skip_styles -%}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}

  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'quick-order-list.css' | asset_url | stylesheet_tag }}
  {{ 'quantity-popover.css' | asset_url | stylesheet_tag }}
{%- endunless -%}

<div class="page-width">

<h2 class="title inline-richtext h1">{{ section.settings.heading | escape }}</h2>


    <ul class="recently-viewed grid product-grid grid--4-col-desktop grid--2-col-tablet-down" role="list" 
    style="margin-bottom: 2em;">

    <!-- Recently viewed products will appear here -->

    </ul>

</div>



<script>

function setRecentlyViewedProducts() {

  const productData = {

    productTitle: "{{ product.title }}",
    productImg: "{{ product.featured_media | image_url: width: 533 }}",
    imgWidth:"{{ product.featured_media.width }}",
    imgHeight:"{{ product.featured_media.height }}",
    productPrice: "{{ product.price | money_with_currency }}",
    productUrl: "{{ product.url }}",
    productImageAltText: "{{product.featured_media.alt | escape }}",
    productId: "{{product.id}}"

  };

  const productList = [];

  let jsonResp, jsonRespArr, jsonRespArrStr;

  const numberOfProducts = 4;



  productList.push(productData);

  const currProductPageTitle = productData.productTitle;

  const productDataString = JSON.stringify(productList);

  const localData = localStorage.getItem("recentlyViewedProduct");



  if (localData === null) {

    localStorage.setItem("recentlyViewedProduct", productDataString);

  } else if (localData) {

    const oldProductData = localStorage.getItem("recentlyViewedProduct");

    const countProductData = (oldProductData.match(/productTitle/g) || []).length;

    const sameProduct = oldProductData.includes(currProductPageTitle);

    if (countProductData < numberOfProducts && sameProduct == false) {

      jsonResp = JSON.parse(oldProductData);

      jsonRespArr = jsonResp.concat(productList);

      jsonRespArrStr = JSON.stringify(jsonRespArr);

      localStorage.setItem("recentlyViewedProduct", jsonRespArrStr);

    } else if (countProductData >= numberOfProducts && sameProduct == false) {

      jsonResp = JSON.parse(oldProductData);

      jsonResp.shift();

      jsonRespArr = jsonResp.concat(productList);

      jsonRespArr = JSON.stringify(jsonRespArr);

      localStorage.setItem("recentlyViewedProduct", jsonRespArr);

    }

  }

}



setRecentlyViewedProducts();

const localViewed = localStorage.recentlyViewedProduct;




function getRecentlyViewedProducts() {

  const productData = JSON.parse(localStorage.getItem("recentlyViewedProduct"));

  const recentlyViewedHtml = [];

  productData.map(item => {




    recentlyViewedHtml.unshift(`

 

<li class="grid__item ep-rv-count-${productData.length}" style="background: #eee;
    padding: .5em;">
      
<div class="card-wrapper product-card-wrapper underline-links-hover">
    <div class="card card--standard card--media" style="--ratio-percent: 66.65%;">

      <div class="card__inner color-background-2 gradient ratio" style="--ratio-percent: 66.65%;"><div class="card__media">
            <div class="media media--transparent media--hover-effect">
              
              <img srcset="${item.productImg}" src="${item.productImg}" sizes="(min-width: 1400px) 317px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)" 
              alt="${item.productImageAltText}" class="motion-reduce" loading="lazy" width="2000" height="1333">
              
<img srcset="${item.productImg}" src="${item.productImg}" sizes="(min-width: 1400px) 317px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)" alt="" class="motion-reduce" loading="lazy" width="" height=""></div>
          </div><div class="card__content">
          <div class="card__information">
            <h3 class="card__heading">
              <a href="${item.productUrl}" id="StandardCardNoMediaLink--1511423812" class="full-unstyled-link" aria-labelledby="StandardCardNoMediaLink--1511423812 NoMediaStandardBadge--1511423812">
                ${item.productTitle}
              </a>
            </h3>
          </div>
          <div class="card__badge bottom left"></div>
        </div>
      </div>
      <div class="card__content">
        <div class="card__information">
          <h3 class="card__heading h5" id="title--1511423812">
            <a href="${item.productUrl}" id="CardLink--1511423812" class="full-unstyled-link" aria-labelledby="CardLink--1511423812 Badge--1511423812">
              ${item.productTitle}
            </a>
          </h3>
          <div class="card-information">

<span class="caption-large light"></span>
<div class="
      price ">
    <div class="price__container"><div class="price__regular"><span class="visually-hidden visually-hidden--inline">Regular price</span>
          <span class="price-item price-item--regular">
            ${item.productPrice}
          </span></div>
      <div class="price__sale">
          <span class="visually-hidden visually-hidden--inline">Regular price</span>
          <span>
            <s class="price-item price-item--regular">
              
                
              
            </s>
          </span><span class="visually-hidden visually-hidden--inline">Sale price</span>
        <span class="price-item price-item--sale price-item--last">
           ${item.productPrice}
        </span>
      </div>
      <small class="unit-price caption hidden">
        <span class="visually-hidden">Unit price</span>
        <span class="price-item price-item--last">
          <span></span>
          <span aria-hidden="true">/</span>
          <span class="visually-hidden">&nbsp;per&nbsp;</span>
          <span>
          </span>
        </span>
      </small>
    </div></div>


</div>
        </div>
        
        
        <div class="card__badge bottom left"></div>
      </div>
    </div>
  </div>
          
    </li>

   `);

  });

  const newProductData = `${recentlyViewedHtml.join("")}`;

  const fullContent = document.getElementsByClassName("recently-viewed");

  fullContent[0].innerHTML = newProductData;

}



document.addEventListener("DOMContentLoaded", function (event) {

  getRecentlyViewedProducts();

});



</script>





{% schema %}

  {

    "name": "Recent Products",
     "tag": "section",
  "class": "section",
    "settings": [

      {

      "type": "text",

      "id": "heading",

      "default": "Recently Viewed",

      "label": "Title"

    }

    ],
  "presets": [
    {
      "name": "Recent Products",
      "blocks": [
      ]
    }
  ]

  }

{% endschema %}